apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Chart.Name }}-cron
spec:
  schedule: "{{ .Values.config.cron }}"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccount: {{ .Values.serviceAccount.name }}
          containers:
            - name: {{ .Chart.Name }}
              image: {{ .Values.config.image }}
              imagePullPolicy: Always
              env:
                - name: GIT_HTTPS_CLONE_URL
                  value: {{ .Values.remoteDeployment.gitHttpsCloneUrl }}
                - name: TARGET_BRANCH
                  value: {{ .Values.remoteDeployment.targetBranch }}
                - name: CURRENT_DEPLOYMENT_SHA
                  value: {{ .Values.remoteDeployment.currentDeploymentSha }}
                - name: RELEASE_NAME
                  value: {{ .Release.Name }}
                - name: NAMESPACE
                  value: {{ .Release.Namespace }}
                - name: VALUES_FILE_FROM_REPO_ROOT
                  value: {{ .Values.remoteDeployment.valuesFileFromRepoRoot }}
              {{- if .Values.global.objectStore.accessKey -}}
              - name: GLOBAL_OBJECTSTORE_ACCESSKEY
                value: {{ .Values.global.objectStore.accessKey }}
              {{ end -}}
              {{ if .Values.global.objectStore.accessSecret }}
              - name: GLOBAL_OBJECTSTORE_ACCESSSECRET
                value: {{ .Values.global.objectStore.accessSecret }}
              {{ end -}}
              {{ if .Values.remoteDeployment.secrets.raptor.auth.auth0_client_secret }}
              - name: RAPTOR_AUTH0_CLIENT_SECRET
                value: {{ .Values.remoteDeployment.secrets.raptor.auth.auth0_client_secret }}
              {{ end -}}
              {{ if index .Values.remoteDeployment.secrets "discovery-api.secrets.discoveryApiPresignKey" }}
              - name: DISCOVERY_API_PRESIGN_KEY
                value: {{ index .Values.remoteDeployment.secrets "discovery-api.secrets.discoveryApiPresignKey" }}
              {{ end -}}
              {{ if index .Values.remoteDeployment.secrets "discovery-api.secrets.guardianSecretKey" }}
              - name: DISCOVERY_API_GUARDIAN_KEY
                value: {{ index .Values.remoteDeployment.secrets "discovery-api.secrets.guardianSecretKey" }}
              {{ end -}}
              {{ if index .Values.remoteDeployment.secrets "discovery-api.postgres.password" }}
              - name: DISCOVERY_API_POSTGRES_PASSWORD
                value: {{ index .Values.remoteDeployment.secrets "discovery-api.postgres.password" }}
              {{ end }}
              {{ if .Values.remoteDeployment.secrets.andi.postgres.password }}
              - name: ANDI_POSTGRES_PASSWORD
                value: {{ .Values.remoteDeployment.secrets.andi.postgres.password }}
              {{ end -}}
              {{ if .Values.remoteDeployment.secrets.andi.auth.auth0_client_secret }}
              - name: ANDI_AUTH0_CLIENT_SECRET
                value: {{ .Values.remoteDeployment.secrets.andi.auth.auth0_client_secret }}
              {{ end -}}
              {{ if .Values.remoteDeployment.secrets.persistence.metastore.postgres.password }}
              - name: PERSISTENCE_POSTGRES_PASSWORD
                value: {{ .Values.remoteDeployment.secrets.persistence.metastore.postgres.password }}
              {{ end -}}
              {{ if .Values.remoteDeployment.proxyAccountPAT }}
              - name: SAURON_PROXY_PAT
                value: {{ .Values.remoteDeployment.proxyAccountPAT }}
              {{ end -}}

              command:
                - "/bin/bash"
                - "-c"
                - "/usr/local/bin/image_patch_update_script.sh"
                - "/usr/local/bin/deployment_update_script.sh"
              volumeMounts:
                - mountPath: /usr/local/bin/image_patch_update_script.sh
                  name: sauron-commands
                  subPath: image_patch_update_script.sh
                - mountPath: /usr/local/bin/deployment_update_script.sh
                  name: sauron-commands
                  subPath: deployment_update_script.sh
          volumes:
          - name: sauron-commands
            configMap:
              name: sauron-commands
              defaultMode: 0777
          restartPolicy: Never