apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ include "vault.chart" . }}
    app.kubernetes.io/name: {{ include "vault.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ .Chart.Name }}
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        fsGroup: 1000
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          privileged: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "apk add curl && \
                curl -L https://storage.googleapis.com/kubernetes-release/release/v{{ .Values.kubectl.version }}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \
                curl -L https://github.com/stedolan/jq/releases/download/jq-{{ .Values.jq.version }}/jq-linux64 -o /usr/local/bin/jq && \
                chmod +x /usr/local/bin/kubectl /usr/local/bin/jq && \
                source /usr/local/bin/maintenance.sh && \
                init_and_unseal"
          preStop:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "vault step-down"
        command: ["vault", "server", "-config", "/vault/config/server_config.json"]
        image: {{ .Values.vault.repository }}:{{ .Values.vault.tag }}
        imagePullPolicy: {{ .Values.vault.pullPolicy }}
        ports:
        - containerPort: {{ .Values.vault.port }}
          name: vault
        - containerPort: {{ .Values.vault.clusterPort }}
          name: cluster-address
        livenessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true&uninitcode=204&sealedcode=204&
            port: {{ .Values.vault.port }}
            scheme: {{ if .Values.vault.config.listener.tcp.tls_disable -}}HTTP{{- else -}}HTTPS{{- end }}
          initialDelaySeconds: {{ .Values.vault.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.vault.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /v1/sys/health?sealedcode=204&standbycode=204&uninitcode=204&
            port: {{ .Values.vault.port }}
            scheme: {{ if .Values.vault.config.listener.tcp.tls_disable -}}HTTP{{- else -}}HTTPS{{- end }}
          initialDelaySeconds: {{ .Values.vault.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.vault.readiness.periodSeconds }}
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: VAULT_ADDR
          value: "http://$(POD_IP):8200"
        - name: VAULT_API_ADDR
          value: "https://$(POD_IP):8200"
        - name: VAULT_CLUSTER_ADDR
          value: "https://$(POD_IP):8201"
        volumeMounts:
        {{- range .Values.vault.policies }}
        - name: configs
          mountPath: /vault/config/{{ .name }}_policy.hcl
          subPath: {{ .name }}_policy.hcl
        {{- end }}
        - name: key-store
          mountPath: /keys
        - name: configs
          mountPath: /vault/config/server_config.json
          subPath: server_config.json
        - name: configs
          mountPath: /vault/config/admin_policy.hcl
          subPath: admin_policy.hcl
        - name: maintenance-script
          mountPath: /usr/local/bin/maintenance.sh
          subPath: maintenance.sh
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
      volumes:
      - name: configs
        configMap:
          name: {{ .Chart.Name }}
      - name: maintenance-script
        configMap:
          name: {{ .Chart.Name }}-maintenance-script
      - name: key-store
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
