apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "helm.fullname" . }}
    helm.sh/chart: {{ include "helm.chart" . }}
    app.kubernetes.io/instance: {{ include "helm.fullname" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm.fullname" .  }}
      app.kubernetes.io/instance: {{ include "helm.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "helm.fullname" . }}
        app.kubernetes.io/instance: {{ include "helm.fullname" . }}
    spec:
      serviceAccountName: {{ include "helm.fullname" . }}
      containers:
        - name: {{ include "helm.fullname" . }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - containerPort: 80
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: REDIS_HOST
            value: {{ .Values.global.redis.host }}
          - name: REDIS_PASSWORD
            value: {{ .Values.global.redis.password }}
          - name: KAFKA_BROKERS
            value: {{ .Values.global.kafka.brokers | default (include "kafka.brokerservice" .) }}
          - name: METRICS_PORT
            value: {{ quote .Values.monitoring.targetPort }}
          - name: RUN_IN_KUBERNETES
            value: "true"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LIVEVIEW_SALT
            valueFrom:
              secretKeyRef:
                name: andi-lv-salt
                key: salt
          - name: POSTGRES_HOST
            value: {{ .Values.postgres.host }}
          - name: POSTGRES_DBNAME
            value: {{ .Values.postgres.dbname }}
          - name: POSTGRES_USER
            value: {{ .Values.postgres.user }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgres.password }}
          - name: POSTGRES_PORT
            value: {{ quote .Values.postgres.port }}
          - name: SECRETS_ENDPOINT
            value: {{ .Values.global.vault.endpoint }}
          - name: AUTH0_DOMAIN
            value: {{ quote .Values.global.auth.auth0_domain }}
          - name: AUTH0_CLIENT_ID
            value: {{ quote .Values.auth.auth0_client_id }}
          - name: AUTH_JWT_ISSUER
            value: {{ quote .Values.global.auth.jwt_issuer }}
          - name: DOCUMENTATION_ROOT
            value: {{ quote .Values.documentationRoot }}
          - name: ACCESS_LEVEL
            value: {{ quote .Values.accessLevel }}
          - name: VAULT_ROLE
            value: {{ quote .Values.vaultRole | default "andi-role" }}
          - name: HOSTED_FILE_BUCKET
            value: {{ .Values.environment }}-{{ .Values.s3.hostedFileBucket }}
          - name: HOSTED_FILE_REGION
            value: {{ .Values.s3.hostedFileRegion }}
          - name: AUTH0_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-andi-auth0-client-secret
                key: auth0_client_secret
          - name: AWS_ACCESS_KEY_ID
            value: {{ quote .Values.aws.accessKeyId }}
          - name: AWS_ACCESS_KEY_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-andi-aws-access-key-secret
                key: aws_access_key_secret
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
